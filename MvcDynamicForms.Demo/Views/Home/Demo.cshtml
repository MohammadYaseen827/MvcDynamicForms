@model MvcDynamicForms.Core.Form

@{
    ViewBag.Title = "Demo";
}

<h2>MVC Dynamic Form Demo</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.Raw(Model.RenderHtml(true))

    <input type="submit" value="Submit" />
}

@section scripts{
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script type="text/javascript">
        /* You can build in client side funcationality with dynamic forms also.
        jQuery is very good for this sort of thing. */

        $(function () {

            // hide error labels when the user clicks on the offending input element
            $('div.MvcFieldWrapper :input').focus(function () {
                $(this).closest('div.MvcFieldWrapper').children('label.MvcDynamicFieldError').fadeOut();
            });

            // for demo5
            $(".datepicker").datepicker();

            $("#MvcDynamicField_Birthday").datepicker();
        });
    </script>
}